{"version":3,"sources":["firebase.js","redux/user.js","redux/characters.js","redux/store.js","components/Card.jsx","components/HomePage.jsx","components/FavPage.jsx","components/LoginPage.jsx","Routes.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","loginWithGoogle","a","provider","auth","GoogleAuthProvider","signInWithPopup","snapshot","user","console","error","initialData","loggedIn","fetching","reducer","state","action","type","payload","saveStorage","storage","localStorage","JSON","stringify","array","current","rootReducer","combineReducers","characters","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","generateStore","store","createStore","applyMiddleware","thunk","dispatch","getState","axios","get","res","data","results","response","message","getCharactersAction","getItem","parse","restoreSessionAction","Container","styled","div","CardContainer","Name","p","Actions","Left","Right","onClick","side","log","Card","name","image","rightClick","leftClick","alt","src","size","defaultProps","connect","chars","removeCharacterAction","shift","char","renderCharacter","Hearth","span","FavPage","role","aria-label","map","i","key","length","Button","button","doGoogleLoginAction","uid","displayName","email","photoURL","logOutAction","signOut","removeItem","style","textAlign","PrivateRoute","path","component","rest","to","Routes","exact","Home","LoginPage","Navbar","App","className","activeClassName","WithRouter","WithStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.108d5cd9.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCdevtJAXbq-bd59KGr06i4mncbSJPjgi8',\n  authDomain: 'react-hector-bliss.firebaseapp.com',\n  databaseURL: 'https://react-hector-bliss.firebaseio.com',\n  projectId: 'react-hector-bliss',\n  storageBucket: 'react-hector-bliss.appspot.com',\n  messagingSenderId: '479725401674',\n  appId: '1:479725401674:web:0877497994de92b9ecd8b3',\n  measurementId: 'G-RGJ11BJCHW',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const loginWithGoogle = async () => {\n  let provider = new firebase.auth.GoogleAuthProvider();\n  try {\n    let snapshot = await firebase.auth().signInWithPopup(provider);\n    return snapshot.user;\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const signOutGoogle = () => {\n  firebase.auth().signOut();\n};\n","import { loginWithGoogle, signOutGoogle } from '../firebase';\n\n// constants\n\nconst initialData = {\n  loggedIn: false,\n  fetching: false,\n};\n\nconst LOGIN = 'LOGIN';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGIN_ERROR = 'LOGIN_ERROR';\nconst LOG_OUT = 'LOG_OUT';\n\n// reducer\n\nconst reducer = (state = initialData, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, fetching: true };\n\n    case LOGIN_ERROR:\n      return { ...state, fetching: false, error: action.payload };\n\n    case LOGIN_SUCCESS:\n      return { ...state, fetching: false, ...action.payload, loggedIn: true };\n\n    case LOG_OUT:\n      return { ...initialData };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n// actions\n\nexport const logOutAction = () => (dispatch, getState) => {\n  signOutGoogle();\n  dispatch({\n    type: LOG_OUT,\n  });\n  localStorage.removeItem('storage');\n};\n\nexport const restoreSessionAction = () => dispatch => {\n  let storage = localStorage.getItem('storage');\n  storage = JSON.parse(storage);\n\n  if (storage && storage.user) {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: storage.user,\n    });\n  }\n};\n\nexport const doGoogleLoginAction = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: LOGIN,\n    });\n\n    try {\n      let user = await loginWithGoogle();\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          uid: user.uid,\n          displayName: user.displayName,\n          email: user.email,\n          photoURL: user.photoURL,\n        },\n      });\n      saveStorage(getState());\n    } catch (err) {\n      console.error(err);\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n};\n\n// utils\n\nconst saveStorage = storage => {\n  localStorage.storage = JSON.stringify(storage);\n};\n","import axios from 'axios';\n\n// constants\n\nconst initialData = {\n  fetching: false,\n  array: [],\n  current: {},\n};\n\nconst URL = 'https://rickandmortyapi.com/api/character';\n\nconst GET_CHARACTERS = 'GET_CHARACTERS';\nconst GET_CHARACTERS_SUCCESS = 'GET_CHARACTERS_SUCCESS';\nconst GET_CHARACTERS_ERROR = 'GET_CHARACTERS_ERROR';\nconst REMOVE_CHARACTER = 'REMOVE_CHARACTER';\n\n// reducer\n\nexport default function reducer(state = initialData, action) {\n  switch (action.type) {\n    case GET_CHARACTERS:\n      return { ...state, fetching: true };\n\n    case GET_CHARACTERS_SUCCESS:\n      return { ...state, fetching: false, array: action.payload };\n\n    case GET_CHARACTERS_ERROR:\n      return { ...state, fetching: false, error: action.payload };\n\n    case REMOVE_CHARACTER:\n      return { ...state, array: action.payload };\n\n    default:\n      return state;\n  }\n}\n\n// actions\n\nexport const removeCharacterAction = () => {\n  return (dispatch, getState) => {\n    let { array } = getState().characters;\n    array.shift();\n    dispatch({ type: REMOVE_CHARACTER, payload: [...array] });\n  };\n};\n\nexport const getCharactersAction = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: GET_CHARACTERS,\n    });\n\n    try {\n      let res = await axios.get(URL);\n      dispatch({\n        type: GET_CHARACTERS_SUCCESS,\n        payload: res.data.results,\n      });\n    } catch (err) {\n      console.error(err);\n      dispatch({ type: GET_CHARACTERS_ERROR, payload: err.response.message });\n    }\n  };\n};\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport user, { restoreSessionAction } from './user';\nimport characters, { getCharactersAction } from './characters';\n\nconst rootReducer = combineReducers({\n  user,\n  characters,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst generateStore = () => {\n  let store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  getCharactersAction()(store.dispatch, store.getState);\n  restoreSessionAction()(store.dispatch);\n  return store;\n};\n\nexport default generateStore;\n","import React from 'react';\nimport styled from 'styled-components';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  font-family: Avenir;\n  cursor: pointer;\n  min-width: 250px;\n  max-width: 450px;\n\n  span {\n    color: white;\n    font-size: 6rem;\n    transition: all 0.3s;\n  }\n`;\n\nconst CardContainer = styled.div`\n  background: #381460;\n  color: #eee;\n  width: 320px;\n  padding: 15px;\n  border-radius: 1rem;\n  box-sizing: border-box;\n  box-shadow: 0px 2px 10px black;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  img {\n    border-radius: 1rem;\n    max-height: 300px;\n    width: 100%;\n  }\n`;\n\nconst Name = styled.p`\n  font-size: 2rem;\n  font-weight: bold;\n  margin: 30px 0 10px 0;\n`;\n\nconst Actions = styled.div`\n  transition: all 0.3s;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Left = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(189, 195, 199, 0.7);\n  border-radius: 1rem 0 0 1rem;\n  &:hover span {\n    font-size: 7rem;\n  }\n`;\n\nconst Right = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(246, 36, 89, 0.7);\n  border-radius: 0 1rem 1rem 0;\n  &:hover span {\n    font-size: 7rem;\n  }\n`;\n\nlet rick = 'https://rickandmortyapi.com/api/character/avatar/1.jpeg';\n\nfunction onClick(side) {\n  return () => console.log(side);\n}\n\nconst Card = ({ name, image, rightClick, leftClick }) => {\n  return (\n    <Container>\n      <CardContainer>\n        <img alt='rick' src={image} />\n        <Name>{name}</Name>\n        <Actions>\n          <Left onClick={leftClick || onClick('left')}>\n            <FontAwesome name='thumbs-down' size='2x' />\n          </Left>\n          <Right onClick={rightClick || onClick('right')}>\n            <FontAwesome name='heart' size='2x' />\n          </Right>\n        </Actions>\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Card;\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  leftClick: PropTypes.func,\n  rightClick: PropTypes.func,\n};\n\nCard.defaultProps = {\n  name: 'Rick Sanches',\n  image: rick,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport { removeCharacterAction } from '../redux/characters';\nimport Card from './Card';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Home = ({ chars, removeCharacterAction }) => {\n  const renderCharacter = () => {\n    let char = chars[0];\n    return <Card leftClick={removeCharacterAction} {...char} />;\n  };\n\n  return (\n    <Container>\n      <h2>Personajes</h2>\n      <div>{renderCharacter()}</div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    chars: state.characters.array,\n  };\n};\n\nexport default connect(mapStateToProps, { removeCharacterAction })(Home);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Card from './Card';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Hearth = styled.span`\n  font-size: 2rem;\n  margin: 10px 0 20px 0;\n`;\n\nconst FavPage = ({ characters = [0] }) => {\n  const renderCharacter = (char, i) => {\n    return <Card key={i} />;\n  };\n  return (\n    <Container>\n      <Hearth>\n        <span role='img' aria-label='hearth'>\n          ❤️\n        </span>\n      </Hearth>\n      {characters.map(renderCharacter)}\n      {!characters.length && <h3>No hay personajes agregados</h3>}\n    </Container>\n  );\n};\n\nexport default FavPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport { doGoogleLoginAction, logOutAction } from '../redux/user.js';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  padding: 20px 50px;\n  border: none;\n  margin: 20px 0px;\n  border-radius: 5px;\n  background-color: transparent;\n  color: orangered;\n  font-size: 1.2rem;\n  box-sizing: border-box;\n  transition: all 0.3s;\n  cursor: pointer;\n  border: 2px solid orangered;\n\n  &:hover {\n    background-color: orangered;\n    color: white;\n    border: 2px solid transparent;\n  }\n`;\n\nconst LoginPage = ({\n  loggedIn,\n  logOutAction,\n  fetching,\n  doGoogleLoginAction,\n}) => {\n  const doLogin = () => {\n    doGoogleLoginAction();\n  };\n\n  const doLogOut = () => {\n    logOutAction();\n  };\n\n  if (fetching) {\n    return <h2 style={{ textAlign: 'center' }}>Cargando...</h2>;\n  }\n\n  return (\n    <Container>\n      {loggedIn ? (\n        <>\n          <h1>Cierra tu sesión</h1>\n          <Button onClick={doLogOut}>Cerrar Sesión</Button>\n        </>\n      ) : (\n        <>\n          <h1>Inicia Sesión con Google</h1>\n          <Button onClick={doLogin}>Iniciar</Button>\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({ user: { fetching, loggedIn } }) => {\n  return {\n    fetching,\n    loggedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { doGoogleLoginAction, logOutAction })(\n  LoginPage\n);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './components/HomePage';\nimport FavPage from './components/FavPage';\nimport LoginPage from './components/LoginPage';\n\nconst PrivateRoute = ({ path, component, ...rest }) => {\n  let storage = localStorage.getItem('storage');\n  storage = JSON.parse(storage);\n  if (storage && storage.user) {\n    return <Route path={path} component={component} {...rest} />;\n  } else {\n    return <Redirect to='/login' {...rest} />;\n  }\n};\n\nexport const Routes = () => {\n  return (\n    <Switch>\n      <PrivateRoute exact path='/' component={Home} />\n      <PrivateRoute path='/favs' component={FavPage} />\n      <Route path='/login' component={LoginPage} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\nimport Routes from './Routes';\n\nconst Navbar = styled.div`\n  margin-bottom: 20px;\n  width: 100%;\n  display: flex;\n  box-sizing: border-box;\n  font-weight: bold;\n  font-size: 1.5rem;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <Navbar>\n        <NavLink className='link' activeClassName='active' exact to='/'>\n          Inicio\n        </NavLink>\n        <NavLink className='link' activeClassName='active' to='/favs'>\n          Favoritos\n        </NavLink>\n        <NavLink className='link' activeClassName='active' to='/login'>\n          Login\n        </NavLink>\n      </Navbar>\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport generateStore from './redux/store';\nimport App from './App';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\n\nlet store = generateStore();\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nconst WithStore = () => (\n  <Provider store={store}>\n    <WithRouter />\n  </Provider>\n);\n\nReactDOM.render(<WithStore />, document.getElementById('root'));\n"],"sourceRoot":""}