{"version":3,"sources":["redux/user.js","redux/characters.js","redux/store.js","components/Card.jsx","components/HomePage.jsx","components/FavPage.jsx","components/LoginPage.jsx","Routes.js","App.js","index.js"],"names":["initialData","loggedIn","fetching","array","current","rootReducer","combineReducers","user","state","action","type","characters","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Container","styled","div","CardContainer","Name","p","Actions","Left","Right","onClick","side","console","log","Card","name","image","rightClick","leftClick","alt","src","size","defaultProps","Home","useState","chars","setChars","nextChar","shift","length","useEffect","axios","get","then","res","data","results","char","renderCharacter","Hearth","span","FavPage","role","aria-label","map","i","key","Button","button","LoginPage","Routes","exact","path","component","Navbar","App","className","activeClassName","to","store","dispatch","createStore","applyMiddleware","thunk","getState","generateStore","WithRouter","WithStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.886148bf.chunk.js","sourcesContent":["// constants\n\nconst initialData = {\n  loggedIn: false,\n};\n\nconst LOGIN = 'LOGIN';\n\n// reducer\n\nexport default function reducer(state = initialData, action) {\n  switch (action.type) {\n    case LOGIN:\n      return;\n    default:\n      return state;\n  }\n}\n\n// actions\n","import axios from 'axios';\n\n// constants\n\nconst initialData = {\n  fetching: false,\n  array: [],\n  current: {},\n};\n\nconst URL = 'https://rickandmortyapi.com/api/character';\n\nconst GET_CHARACTERS = 'GET_CHARACTERS';\nconst GET_CHARACTERS_SUCCESS = 'GET_CHARACTERS_SUCCESS';\nconst GET_CHARACTERS_ERROR = 'GET_CHARACTERS_ERROR';\n\n// reducer\n\nexport default function reducer(state = initialData, action) {\n  switch (action.type) {\n    case GET_CHARACTERS:\n    case GET_CHARACTERS_SUCCESS:\n      return { ...state, array: action.payload };\n    case GET_CHARACTERS_ERROR:\n    default:\n      return state;\n  }\n}\n\n// actions\n\nexport const getCharactersAction = () => (dispatch, getState) => {\n  return axios.get(URL).then(res => {\n    dispatch({\n      type: GET_CHARACTERS_SUCCESS,\n      payload: res.data.results,\n    });\n  });\n};\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport user from './user';\nimport characters, { getCharactersAction } from './characters';\n\nconst rootReducer = combineReducers({\n  user,\n  characters,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function generateStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  getCharactersAction()(store.dispatch, store.getState);\n  return store;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  font-family: Avenir;\n  cursor: pointer;\n  min-width: 250px;\n  max-width: 450px;\n\n  span {\n    color: white;\n    font-size: 6rem;\n    transition: all 0.3s;\n  }\n`;\n\nconst CardContainer = styled.div`\n  background: #381460;\n  color: #eee;\n  width: 320px;\n  padding: 15px;\n  border-radius: 1rem;\n  box-sizing: border-box;\n  box-shadow: 0px 2px 10px black;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  img {\n    border-radius: 1rem;\n    max-height: 300px;\n    width: 100%;\n  }\n`;\n\nconst Name = styled.p`\n  font-size: 2rem;\n  font-weight: bold;\n  margin: 30px 0 10px 0;\n`;\n\nconst Actions = styled.div`\n  transition: all 0.3s;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Left = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(189, 195, 199, 0.7);\n  border-radius: 1rem 0 0 1rem;\n  &:hover span {\n    font-size: 7rem;\n  }\n`;\n\nconst Right = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(246, 36, 89, 0.7);\n  border-radius: 0 1rem 1rem 0;\n  &:hover span {\n    font-size: 7rem;\n  }\n`;\n\nlet rick = 'https://rickandmortyapi.com/api/character/avatar/1.jpeg';\n\nfunction onClick(side) {\n  return () => console.log(side);\n}\n\nexport default function Card({ name, image, rightClick, leftClick }) {\n  return (\n    <Container>\n      <CardContainer>\n        <img alt='rick' src={image} />\n        <Name>{name}</Name>\n        <Actions>\n          <Left onClick={leftClick || onClick('left')}>\n            <FontAwesome name='thumbs-down' size='2x' />\n          </Left>\n          <Right onClick={rightClick || onClick('right')}>\n            <FontAwesome name='heart' size='2x' />\n          </Right>\n        </Actions>\n      </CardContainer>\n    </Container>\n  );\n}\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  leftClick: PropTypes.func,\n  rightClick: PropTypes.func,\n};\n\nCard.defaultProps = {\n  name: 'Rick Sanches',\n  image: rick,\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport Card from './Card';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nlet URL = 'https://rickandmortyapi.com/api';\n\nexport default function Home() {\n  let [chars, setChars] = useState([]);\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  function nextChar() {\n    chars.shift();\n    if (!chars.length) {\n      //get more characters\n    }\n    setChars([...chars]);\n  }\n\n  function renderCharacter() {\n    let char = chars[0];\n    return <Card leftClick={nextChar} {...char} />;\n  }\n\n  function getCharacters() {\n    return axios.get(`${URL}/character`).then(res => {\n      setChars(res.data.results);\n    });\n  }\n\n  return (\n    <Container>\n      <h2>Personajes</h2>\n      <div>{renderCharacter()}</div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Card from './Card';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Hearth = styled.span`\n  font-size: 2rem;\n  margin: 10px 0 20px 0;\n`;\n\nexport default function FavPage({ characters = [0] }) {\n  function renderCharacter(char, i) {\n    return <Card key={i} />;\n  }\n  return (\n    <Container>\n      <Hearth>\n        <span role='img' aria-label='hearth'>\n          ❤️\n        </span>\n      </Hearth>\n      {characters.map(renderCharacter)}\n      {!characters.length && <h3>No hay personajes agregados</h3>}\n    </Container>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  padding: 20px 50px;\n  border: none;\n  margin: 20px 0px;\n  border-radius: 5px;\n  background-color: transparent;\n  color: orangered;\n  font-size: 1.2rem;\n  box-sizing: border-box;\n  transition: all 0.3s;\n  cursor: pointer;\n  border: 2px solid orangered;\n\n  &:hover {\n    background-color: orangered;\n    color: white;\n    border: 2px solid transparent;\n  }\n`;\n\nexport default function LoginPage() {\n  return (\n    <Container>\n      <h1>Inicia Sesión con Google</h1>\n      <h1>Cierra tu sesión</h1>\n      <Button>Iniciar</Button>\n      <Button>Cerrar Sesión</Button>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/HomePage';\nimport FavPage from './components/FavPage';\nimport LoginPage from './components/LoginPage';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route path='/favs' component={FavPage} />\n      <Route path='/login' component={LoginPage} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\nimport Routes from './Routes';\n\nconst Navbar = styled.div`\n  margin-bottom: 20px;\n  width: 100%;\n  display: flex;\n  box-sizing: border-box;\n  font-weight: bold;\n  font-size: 1.5rem;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <Navbar>\n        <NavLink className='link' activeClassName='active' exact to='/'>\n          Inicio\n        </NavLink>\n        <NavLink className='link' activeClassName='active' to='/favs'>\n          Favoritos\n        </NavLink>\n        <NavLink className='link' activeClassName='active' to='/login'>\n          Login\n        </NavLink>\n      </Navbar>\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport generateStore from './redux/store';\nimport App from './App';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconst store = generateStore();\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nconst WithStore = () => (\n  <Provider store={store}>\n    <WithRouter />\n  </Provider>\n);\n\nReactDOM.render(<WithStore />, document.getElementById('root'));\n"],"sourceRoot":""}