{"version":3,"sources":["firebase.js","redux/characters.js","redux/user.js","redux/store.js","components/Card.jsx","components/HomePage.jsx","components/FavPage.jsx","components/LoginPage.jsx","Routes.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collection","getFavs","uid","a","doc","get","snap","data","array","console","error","loginWithGoogle","provider","auth","GoogleAuthProvider","signInWithPopup","snapshot","user","initialData","fetching","current","favorites","nextPage","CLIENT","ApolloClient","uri","getCharactersAction","dispatch","getState","query","gql","type","characters","variables","page","payload","results","info","next","loggedIn","reducer","state","action","saveStorage","storage","localStorage","JSON","stringify","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","generateStore","store","createStore","applyMiddleware","thunk","getItem","parse","restoreSessionAction","Container","styled","div","CardContainer","Name","p","Actions","Left","Right","Card","name","image","rightClick","leftClick","hide","alt","src","onClick","size","defaultProps","connect","chars","addToFavoritesAction","character","shift","push","set","updateDB","removeCharacterAction","length","addFav","role","aria-label","char","renderCharacter","Hearth","span","Characters","map","i","key","Button","button","doGoogleLoginAction","displayName","email","photoURL","arr","message","retreiveFavs","logOutAction","signOut","removeItem","style","textAlign","PrivateRoute","path","component","rest","to","Routes","exact","Home","FavPage","LoginPage","Navbar","App","className","activeClassName","WithRouter","WithStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a82371c4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCdevtJAXbq-bd59KGr06i4mncbSJPjgi8',\n  authDomain: 'react-hector-bliss.firebaseapp.com',\n  databaseURL: 'https://react-hector-bliss.firebaseio.com',\n  projectId: 'react-hector-bliss',\n  storageBucket: 'react-hector-bliss.appspot.com',\n  messagingSenderId: '479725401674',\n  appId: '1:479725401674:web:0877497994de92b9ecd8b3',\n  measurementId: 'G-RGJ11BJCHW',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nlet db = firebase.firestore().collection('favs');\n\nexport const getFavs = async uid => {\n  try {\n    const snap = await db.doc(uid).get();\n    return snap.data().array;\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const updateDB = (array, uid) => {\n  return db.doc(uid).set({ array });\n};\n\nexport const loginWithGoogle = async () => {\n  let provider = new firebase.auth.GoogleAuthProvider();\n  try {\n    let snapshot = await firebase.auth().signInWithPopup(provider);\n    return snapshot.user;\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const signOutGoogle = () => {\n  firebase.auth().signOut();\n};\n","import ApolloClient, { gql } from 'apollo-boost';\nimport { updateDB, getFavs } from '../firebase';\n\n// constants\n\nconst initialData = {\n  fetching: false,\n  array: [],\n  current: {},\n  favorites: [],\n  nextPage: 1,\n};\n\nconst CLIENT = new ApolloClient({ uri: 'https://rickandmortyapi.com/graphql' });\n\nconst GET_CHARACTERS = 'GET_CHARACTERS';\nconst GET_CHARACTERS_SUCCESS = 'GET_CHARACTERS_SUCCESS';\nconst GET_CHARACTERS_ERROR = 'GET_CHARACTERS_ERROR';\nconst REMOVE_CHARACTER = 'REMOVE_CHARACTER';\nconst ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\nconst GET_FAVS = 'GET_FAVS ';\nconst GET_FAVS_SUCCESS = 'GET_FAVS_SUCCESS ';\nconst GET_FAVS_ERROR = 'GET_FAVS_ERROR';\nconst UPDATE_PAGE = 'UPDATE_PAGE';\n\n// reducer\n\nexport default function reducer(state = initialData, action) {\n  switch (action.type) {\n    case GET_CHARACTERS:\n      return { ...state, fetching: true };\n\n    case GET_CHARACTERS_SUCCESS:\n      return { ...state, fetching: false, array: action.payload };\n\n    case GET_CHARACTERS_ERROR:\n      return { ...state, fetching: false, error: action.payload };\n\n    case REMOVE_CHARACTER:\n      return { ...state, array: action.payload };\n\n    case ADD_TO_FAVORITES:\n      return { ...state, ...action.payload };\n\n    case GET_FAVS:\n      return { ...state, fetching: true };\n\n    case GET_FAVS_SUCCESS:\n      return { ...state, fetching: false, favorites: action.payload };\n\n    case GET_FAVS_ERROR:\n      return { ...state, fetching: false, error: action.payload };\n\n    case UPDATE_PAGE:\n      return { ...state, nextPage: action.payload };\n\n    default:\n      return state;\n  }\n}\n\n// actions\n\nexport const retreiveFavs = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: GET_FAVS,\n    });\n    const { uid } = getState().user;\n\n    try {\n      const arr = await getFavs(uid);\n      dispatch({\n        type: GET_FAVS_SUCCESS,\n        payload: [...arr],\n      });\n    } catch (err) {\n      console.error(err);\n      dispatch({ type: GET_FAVS_ERROR, payload: err.message });\n    }\n  };\n};\n\nexport const addToFavoritesAction = () => {\n  return (dispatch, getState) => {\n    const { array, favorites } = getState().characters;\n    const { uid } = getState().user;\n    const character = array.shift();\n\n    favorites.push(character);\n\n    updateDB(favorites, uid);\n\n    dispatch({\n      type: ADD_TO_FAVORITES,\n      payload: { array: [...array], favorites: [...favorites] },\n    });\n  };\n};\n\nexport const removeCharacterAction = () => {\n  return (dispatch, getState) => {\n    let { array } = getState().characters;\n    array.shift();\n    if (!array.length) {\n      getCharactersAction()(dispatch, getState);\n      return;\n    }\n    dispatch({ type: REMOVE_CHARACTER, payload: [...array] });\n  };\n};\n\nexport const getCharactersAction = () => {\n  return async (dispatch, getState) => {\n    let query = gql`\n      query($page: Int) {\n        characters(page: $page) {\n          info {\n            pages\n            next\n            prev\n          }\n          results {\n            name\n            image\n          }\n        }\n      }\n    `;\n\n    dispatch({\n      type: GET_CHARACTERS,\n    });\n\n    const { nextPage } = getState().characters;\n    const { data, error } = await CLIENT.query({\n      query,\n      variables: { page: nextPage },\n    });\n\n    if (error) {\n      dispatch({\n        type: GET_CHARACTERS_ERROR,\n        payload: error,\n      });\n      return;\n    }\n\n    dispatch({\n      type: GET_CHARACTERS_SUCCESS,\n      payload: data.characters.results,\n    });\n\n    dispatch({\n      type: UPDATE_PAGE,\n      payload: data.characters.info.next ? data.characters.info.next : 1,\n    });\n  };\n};\n","import { loginWithGoogle, signOutGoogle } from '../firebase';\nimport { retreiveFavs } from './characters';\n\n// constants\n\nconst initialData = {\n  loggedIn: false,\n  fetching: false,\n};\n\nconst LOGIN = 'LOGIN';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGIN_ERROR = 'LOGIN_ERROR';\nconst LOG_OUT = 'LOG_OUT';\n\n// reducer\n\nconst reducer = (state = initialData, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, fetching: true };\n\n    case LOGIN_ERROR:\n      return { ...state, fetching: false, error: action.payload };\n\n    case LOGIN_SUCCESS:\n      return { ...state, fetching: false, ...action.payload, loggedIn: true };\n\n    case LOG_OUT:\n      return { ...initialData };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n// actions\n\nexport const logOutAction = () => {\n  return dispatch => {\n    signOutGoogle();\n    dispatch({\n      type: LOG_OUT,\n    });\n    localStorage.removeItem('storage');\n  };\n};\n\nexport const restoreSessionAction = () => {\n  return dispatch => {\n    let storage = localStorage.getItem('storage');\n    storage = JSON.parse(storage);\n\n    if (storage && storage.user) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: storage.user,\n      });\n    }\n  };\n};\n\nexport const doGoogleLoginAction = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: LOGIN,\n    });\n\n    try {\n      let user = await loginWithGoogle();\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          uid: user.uid,\n          displayName: user.displayName,\n          email: user.email,\n          photoURL: user.photoURL,\n        },\n      });\n      saveStorage(getState());\n      retreiveFavs()(dispatch, getState);\n    } catch (err) {\n      console.error(err);\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n};\n\n// utils\n\nconst saveStorage = storage => {\n  localStorage.storage = JSON.stringify(storage);\n};\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport user, { restoreSessionAction } from './user';\nimport characters, { getCharactersAction } from './characters';\n\nconst rootReducer = combineReducers({\n  user,\n  characters,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst generateStore = () => {\n  let store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  getCharactersAction()(store.dispatch, store.getState);\n  restoreSessionAction()(store.dispatch);\n  return store;\n};\n\nexport default generateStore;\n","import React from 'react';\nimport styled from 'styled-components';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  font-family: Avenir;\n  cursor: pointer;\n  min-width: 250px;\n  max-width: 450px;\n  margin: 20px 10px;\n\n  span {\n    color: white;\n    font-size: 6rem;\n    transition: all 0.3s;\n  }\n`;\n\nconst CardContainer = styled.div`\n  background: #381460;\n  color: #eee;\n  width: 320px;\n  padding: 15px;\n  border-radius: 1rem;\n  box-sizing: border-box;\n  box-shadow: 0px 2px 10px black;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  img {\n    border-radius: 1rem;\n    max-height: 300px;\n    width: 100%;\n  }\n`;\n\nconst Name = styled.p`\n  font-size: 2rem;\n  font-weight: bold;\n  margin: 30px 0 10px 0;\n`;\n\nconst Actions = styled.div`\n  transition: all 0.3s;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst Left = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(189, 195, 199, 0.3);\n  border-radius: 1rem 0 0 1rem;\n  &:hover span {\n    font-size: 7rem;\n  }\n`;\n\nconst Right = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(246, 36, 89, 0.3);\n  border-radius: 0 1rem 1rem 0;\n  &:hover span {\n    font-size: 7rem;\n  }\n`;\n\nconst Card = ({ name, image, rightClick, leftClick, hide }) => {\n  return (\n    <>\n      {name ? (\n        <Container>\n          <CardContainer>\n            {image && <img alt={name} src={image} />}\n            <Name>{name}</Name>\n\n            {!hide && (\n              <Actions>\n                <Left onClick={leftClick}>\n                  <FontAwesome name='thumbs-down' size='2x' />\n                </Left>\n                <Right onClick={rightClick}>\n                  <FontAwesome name='heart' size='2x' />\n                </Right>\n              </Actions>\n            )}\n          </CardContainer>\n        </Container>\n      ) : (\n        <h2>No more characters...</h2>\n      )}\n    </>\n  );\n};\n\nexport default Card;\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  leftClick: PropTypes.func,\n  rightClick: PropTypes.func,\n};\n\nCard.defaultProps = {\n  name: 'Loading...',\n  image: '',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport {\n  removeCharacterAction,\n  addToFavoritesAction,\n} from '../redux/characters';\nimport Card from './Card';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Home = ({ chars, removeCharacterAction, addToFavoritesAction }) => {\n  const renderCharacter = () => {\n    let char = chars[0];\n    return (\n      <Card rightClick={addFav} leftClick={removeCharacterAction} {...char} />\n    );\n  };\n\n  const addFav = () => {\n    return addToFavoritesAction();\n  };\n\n  return (\n    <Container>\n      <h2>\n        <span role='img' aria-label='alien'>\n          👽\n        </span>\n      </h2>\n      <div>{renderCharacter()}</div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    chars: state.characters.array,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addToFavoritesAction,\n  removeCharacterAction,\n})(Home);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport Card from './Card';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Hearth = styled.span`\n  font-size: 2rem;\n  margin: 10px 0 20px 0;\n`;\n\nconst Characters = styled.div``;\n\nconst FavPage = ({ characters = [0] }) => {\n  const renderCharacter = (char, i) => {\n    return <Card {...char} key={i} hide />;\n  };\n  return (\n    <Container>\n      <Hearth>\n        <span role='img' aria-label='hearth'>\n          ❤️\n        </span>\n      </Hearth>\n      <Characters>\n        {characters.map(renderCharacter)}\n        {!characters.length && <h3>No characters added</h3>}\n      </Characters>\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({ characters }) => {\n  return {\n    characters: characters.favorites,\n  };\n};\n\nexport default connect(mapStateToProps)(FavPage);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport { doGoogleLoginAction, logOutAction } from '../redux/user.js';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  padding: 20px 50px;\n  border: none;\n  margin: 20px 0px;\n  border-radius: 5px;\n  background-color: transparent;\n  color: orangered;\n  font-size: 1.2rem;\n  box-sizing: border-box;\n  transition: all 0.3s;\n  cursor: pointer;\n  border: 2px solid orangered;\n\n  &:hover {\n    background-color: orangered;\n    color: white;\n    border: 2px solid transparent;\n  }\n`;\n\nconst LoginPage = ({\n  loggedIn,\n  logOutAction,\n  fetching,\n  doGoogleLoginAction,\n}) => {\n  const doLogin = () => {\n    doGoogleLoginAction();\n  };\n\n  const doLogOut = () => {\n    logOutAction();\n  };\n\n  if (fetching) {\n    return <h2 style={{ textAlign: 'center' }}>Loading...</h2>;\n  }\n\n  return (\n    <Container>\n      {loggedIn ? (\n        <>\n          <h1>\n            <span role='img' aria-label='bye'>\n              👋\n            </span>\n          </h1>\n          <Button onClick={doLogOut}>Log Out</Button>\n        </>\n      ) : (\n        <>\n          <h1>Sign In with Google</h1>\n          <Button onClick={doLogin}>Sign In</Button>\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({ user: { fetching, loggedIn } }) => {\n  return {\n    fetching,\n    loggedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { doGoogleLoginAction, logOutAction })(\n  LoginPage\n);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './components/HomePage';\nimport FavPage from './components/FavPage';\nimport LoginPage from './components/LoginPage';\n\nconst PrivateRoute = ({ path, component, ...rest }) => {\n  let storage = localStorage.getItem('storage');\n  storage = JSON.parse(storage);\n  if (storage && storage.user) {\n    return <Route path={path} component={component} {...rest} />;\n  } else {\n    return <Redirect to='/login' {...rest} />;\n  }\n};\n\nexport const Routes = () => {\n  return (\n    <Switch>\n      <PrivateRoute exact path='/' component={Home} />\n      <PrivateRoute path='/favs' component={FavPage} />\n      <Route path='/login' component={LoginPage} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\nimport Routes from './Routes';\n\nconst Navbar = styled.div`\n  margin-bottom: 20px;\n  width: 100%;\n  display: flex;\n  box-sizing: border-box;\n  font-weight: bold;\n  font-size: 1.5rem;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <Navbar>\n        <NavLink className='link' activeClassName='active' exact to='/'>\n          Home\n        </NavLink>\n        <NavLink className='link' activeClassName='active' to='/favs'>\n          Favorites\n        </NavLink>\n        <NavLink className='link' activeClassName='active' to='/login'>\n          User\n        </NavLink>\n      </Navbar>\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport generateStore from './redux/store';\nimport App from './App';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\n\nlet store = generateStore();\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nconst WithStore = () => (\n  <Provider store={store}>\n    <WithRouter />\n  </Provider>\n);\n\nReactDOM.render(<WithStore />, document.getElementById('root'));\n"],"sourceRoot":""}